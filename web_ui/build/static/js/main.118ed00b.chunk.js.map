{"version":3,"sources":["style.module.css","App.js","index.js"],"names":["module","exports","App","useState","valid_ingredient_list","setIngredients","ingredients_query_string_for_api","users_maximum_ingredients","users_selected_ingredients_array","updateUsersSelectedIngredients","recipe_results_from_api","setRecipes","useEffect","getvalidingredientapiresponse","a","fetch","apiresponse","json","validingredientapiresponse","Ingredients","map","e","value","join","getrecipeapiresponse","options","option","label","url","console","log","data","Recipes","Recipe_result","title","ingredients","servings","method","image","replace","Card","className","style","recipe","Img","recipe_picture","src","Body","Title","Text","Top_Bar","logo_text","wizard_logo_text","help_text","Form","filterOption","createFilter","ignoreAccents","isMulti","IngredientsSelector","onChange","autoFocus","placeholder","MaxIngredientsSelectorContainer","htmlFor","id","type","MaxIngredientsSelector","defaultValue","min","max","target","Recipes_Area","string","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gGACAA,EAAOC,QAAU,CAAC,QAAU,uBAAuB,UAAY,yBAAyB,iBAAmB,gCAAgC,UAAY,yBAAyB,oBAAsB,mCAAmC,gCAAkC,+CAA+C,uBAAyB,sCAAsC,aAAe,4BAA4B,OAAS,sBAAsB,eAAiB,8BAA8B,mBAAqB,oC,6KCuJxfC,MAhJf,WAEE,MAAgDC,mBAAS,IAAzD,mBAAOC,EAAP,KAA8BC,EAA9B,KACIC,EAAmC,GACnCC,EAA4B,GAChC,EAAyEJ,mBAAS,IAAlF,mBAAKK,EAAL,KAAuCC,EAAvC,KACA,EAA8CN,mBAAS,IAAvD,mBAAOO,EAAP,KAAgCC,EAAhC,KAGAC,qBAAU,WACRC,MACC,IAEH,IAAMA,EAA6B,uCAAG,8BAAAC,EAAA,sEACZC,MAAM,mDADM,cAChCC,EADgC,gBAEKA,EAAYC,OAFjB,OAE9BC,EAF8B,OAGpCb,EAAea,EAA2BC,aAHN,2CAAH,qDAMnCP,qBAAU,WACgC,GAApCJ,IACFF,EAAoCE,EAAiCY,KAAI,SAAAC,GAAC,OAAIA,EAAEC,SAAOC,KAAK,KAC5FC,OAED,CAAChB,IAGJ,IAAIiB,EAAUrB,EAAsBgB,KAAI,SAAAM,GAAM,MAAK,CAACJ,MAAOI,EAAOC,MAAOD,MAYnEF,EAAoB,uCAAG,gCAAAV,EAAA,6DACvBc,EAAM,0DAA0DtB,EAAiC,IAAIC,EACzGsB,QAAQC,IAAI,4CAA4CF,GAF7B,SAGHb,MAAMa,GAHH,cAGvBZ,EAHuB,gBAIRA,EAAYC,OAJJ,OAIrBc,EAJqB,OAK3BpB,EAAWoB,EAAKC,SALW,2CAAH,qDAcpBC,EAAgB,SAAC,GAA+C,IAA9CC,EAA6C,EAA7CA,MAAMC,EAAuC,EAAvCA,YAAYC,EAA2B,EAA3BA,SAASC,EAAkB,EAAlBA,OAAOC,EAAW,EAAXA,MAwBxD,OAtBAH,GADAA,EAAcA,EAAYI,QAAQ,gBAAiB,KACzBA,QAAQ,kBAAmB,MAoBrDF,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,EAASA,EAAOE,QAAQ,aAAc,QACtBA,QAAQ,eAAgB,KACxBA,QAAQ,aAAc,SACtBA,QAAQ,eAAgB,KACxBA,QAAQ,aAAc,SACtBA,QAAQ,eAAgB,KACxBA,QAAQ,aAAc,SACtBA,QAAQ,eAAgB,KACxBA,QAAQ,aAAc,SACtBA,QAAQ,eAAgB,KACxBA,QAAQ,aAAc,SACtBA,QAAQ,eAAgB,KACxBA,QAAQ,aAAc,SACtBA,QAAQ,eAAgB,KACxBA,QAAQ,aAAc,SACtBA,QAAQ,eAAgB,KACxBA,QAAQ,aAAc,SACtBA,QAAQ,eAAgB,KACxBA,QAAQ,cAAe,UACvBA,QAAQ,gBAAiB,IAIrC,eAACC,EAAA,EAAD,CAAMC,UAAWC,IAAMC,OAAvB,UACI,cAACH,EAAA,EAAKI,IAAN,CAAUH,UAAWC,IAAMG,eAAgBC,IAAKR,IAChD,eAACE,EAAA,EAAKO,KAAN,WACI,cAACP,EAAA,EAAKQ,MAAN,UAAad,IACb,eAACM,EAAA,EAAKS,KAAN,WAAW,8CAAoB,4BAAId,OACnC,eAACK,EAAA,EAAKS,KAAN,WAAW,yCAAe,4BAAIb,OAC9B,cAACI,EAAA,EAAKS,KAAN,UAAW,oCAAS,6CAA0BZ,cAW5D,OACA,sBAAKI,UAAY,MAAjB,UACE,0BAASA,UAAaC,IAAMQ,QAA5B,UACI,8BACE,qBAAIT,UAAWC,IAAMS,UAArB,mBAAsC,sBAAMV,UAAWC,IAAMU,iBAAvB,yBAExC,qBAAKX,UAAWC,IAAMW,UAAtB,+HAGA,eAACC,EAAA,EAAD,CAAMb,UAAY,cAAlB,UACE,cAAC,IAAD,CACAhB,QAASA,EACT8B,aAAcC,YAAa,CAACC,eAAe,IAC3CC,SAAO,EAACjB,UAAaC,IAAMiB,oBAC3BC,SAAWnD,EACXoD,WAAW,EACXC,YAAa,uEAEb,sBAAKrB,UAAWC,IAAMqB,gCAAtB,UACE,uBAAOC,QAAQ,sBAAsBvB,UAAWC,IAAMW,UAAtD,+BACA,uBACAY,GAAG,sBACHC,KAAK,QACLzB,UAAaC,IAAMyB,uBACnBC,aAAc,GACdC,IAAI,IAAIC,IAAI,MACZV,SA7FmC,SAAAvC,GACH,GAApCb,IACFD,EAA6Bc,EAAEkD,OAAOjD,MACtChB,EAAoCE,EAAiCY,KAAI,SAAAC,GAAC,OAAIA,EAAEC,SAAOC,KAAK,KAC5FC,iBA+FF,yBAASiB,UAAaC,IAAM8B,aAA5B,SACG9D,EAAwBU,KAAI,SAAAuB,GAAM,OAAK,cAACV,EAAD,CAExCC,MAASS,EAAM,MACf8B,QAAM,EAACtC,YAAeQ,EAAM,YAC5BP,SAAYO,EAAM,SAClBN,OAAUM,EAAM,OAChBL,MAASK,EAAM,aALRA,EAAM,aCtInB+B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.118ed00b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Top_Bar\":\"style_Top_Bar__1XZY5\",\"logo_text\":\"style_logo_text__389O4\",\"wizard_logo_text\":\"style_wizard_logo_text__PLpmc\",\"help_text\":\"style_help_text__1nf27\",\"IngredientsSelector\":\"style_IngredientsSelector__YtSzJ\",\"MaxIngredientsSelectorContainer\":\"style_MaxIngredientsSelectorContainer__3M_Oa\",\"MaxIngredientsSelector\":\"style_MaxIngredientsSelector__l_uFb\",\"Recipes_Area\":\"style_Recipes_Area__1LVhz\",\"recipe\":\"style_recipe__3g2OX\",\"recipe_picture\":\"style_recipe_picture__3jeUN\",\"view_recipe_button\":\"style_view_recipe_button__2CIKi\"};","import React, {useEffect, useState} from \"react\";\nimport {Card,Button} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {Form} from 'react-bootstrap'\nimport style from './style.module.css';\nimport Select, { createFilter, } from 'react-select';\n\n\nfunction App() {\n\n  const [valid_ingredient_list, setIngredients] = useState([]);\n  let ingredients_query_string_for_api = '';\n  let users_maximum_ingredients = 12;\n  let [users_selected_ingredients_array, updateUsersSelectedIngredients] = useState([]);\n  const [recipe_results_from_api, setRecipes] = useState([]);\n\n\n  useEffect(() => {\n    getvalidingredientapiresponse();\n  }, []);\n\n  const getvalidingredientapiresponse = async () => {\n    var apiresponse = await fetch(`http://80.195.31.145:8000/valid_ingredient_list/`)\n    const validingredientapiresponse = await apiresponse.json();\n    setIngredients(validingredientapiresponse.Ingredients);\n  }\n\n  useEffect(() => {\n    if (users_selected_ingredients_array != 0) {\n      ingredients_query_string_for_api = (users_selected_ingredients_array.map(e => e.value).join(','))\n      getrecipeapiresponse();\n    }\n  }, [users_selected_ingredients_array]);\n\n\n  var options = valid_ingredient_list.map(option => ({value: option,label: option}));\n\n  const updateUsersMaximumIngredientsSetting = e => {\n    if (users_selected_ingredients_array != 0) {\n      users_maximum_ingredients = (e.target.value); \n      ingredients_query_string_for_api = (users_selected_ingredients_array.map(e => e.value).join(','))\n      getrecipeapiresponse(); \n    }\n  }\n\n\n\n  const getrecipeapiresponse = async () => {\n    var url = 'http://80.195.31.145:8000/search_recipes_by_ingredients/'+ingredients_query_string_for_api+\"/\"+users_maximum_ingredients\n    console.log('Attempting to get API response using URL '+url)\n    var apiresponse = await fetch(url)\n    const data = await apiresponse.json();\n    setRecipes(data.Recipes);  \n  }\n\n  const showMethod= e => {\n    \n\n  }\n\n\n  const Recipe_result = ({title,ingredients,servings,method,image}) => {\n    ingredients = ingredients.replace(/<ingredient>/g, '')\n    ingredients = ingredients.replace(/<\\/ingredient>/g, '. ')\n    method = method.replace(/\\<step1>*/g, '1. ')\n    method = method.replace(/\\<\\/step1>*/g, '')\n    method = method.replace(/\\<step2>*/g, ' 2. ')\n    method = method.replace(/\\<\\/step2>*/g, '')\n    method = method.replace(/\\<step3>*/g, ' 3. ')\n    method = method.replace(/\\<\\/step3>*/g, '')\n    method = method.replace(/\\<step4>*/g, ' 4. ')\n    method = method.replace(/\\<\\/step4>*/g, '')\n    method = method.replace(/\\<step5>*/g, ' 5. ')\n    method = method.replace(/\\<\\/step5>*/g, '')\n    method = method.replace(/\\<step6>*/g, ' 6. ')\n    method = method.replace(/\\<\\/step6>*/g, '')\n    method = method.replace(/\\<step7>*/g, ' 7. ')\n    method = method.replace(/\\<\\/step7>*/g, '')\n    method = method.replace(/\\<step8>*/g, ' 8. ')\n    method = method.replace(/\\<\\/step8>*/g, '')\n    method = method.replace(/\\<step9>*/g, ' 9. ')\n    method = method.replace(/\\<\\/step9>*/g, '')\n    method = method.replace(/\\<step10>*/g, ' 10. ')\n    method = method.replace(/\\<\\/step10>*/g, '')\n\n    return(\n        \n        <Card className={style.recipe}>          \n            <Card.Img className={style.recipe_picture} src={image}/>\n            <Card.Body>\n                <Card.Title>{title}</Card.Title>\n                <Card.Text><b>Ingredients: </b><i>{ingredients}</i></Card.Text>\n                <Card.Text><b>Serves: </b><i>{servings}</i></Card.Text>\n                <Card.Text><details><summary>Method</summary>{method}</details></Card.Text>\n            </Card.Body> \n        </Card>\n\n\n\n    )\n  }\n\n  \n\n  return (              \n  <div className = \"App\">\n    <section className = {style.Top_Bar}> \n        <div >\n          <h1 className={style.logo_text}>Recipe<span className={style.wizard_logo_text}>Wizard</span ></h1>\n        </div>\n        <div className={style.help_text}>\n          Search through thousands of recipes using ingredient combinations. Get recipe ideas, use up leftover ingredients. \n        </div>\n        <Form className = \"search-form\">  \n          <Select \n          options={options} \n          filterOption={createFilter({ignoreAccents: false})}\n          isMulti className = {style.IngredientsSelector}    \n          onChange ={updateUsersSelectedIngredients} \n          autoFocus={true}\n          placeholder={<div>Start typing some ingredient names</div>}  \n          /> \n          <div className={style.MaxIngredientsSelectorContainer}>\n            <label htmlFor=\"maximum_ingredients\" className={style.help_text}>Recipe Complexity</label>\n            <input \n            id=\"maximum_ingredients\"\n            type=\"range\" \n            className = {style.MaxIngredientsSelector} \n            defaultValue={15}\n            min=\"1\" max=\"100\"\n            onChange ={updateUsersMaximumIngredientsSetting}>\n            </input>\n          </div>\n        </Form>\n    </section>\n    \n    <section className = {style.Recipes_Area}> \n      {recipe_results_from_api.map(recipe => (<Recipe_result \n      key = {recipe['ID']} \n      title = {recipe['Title']} \n      string ingredients = {recipe['Ingredients']}\n      servings = {recipe['Servings']} \n      method = {recipe['Method']} \n      image = {recipe['Picture_URL']} />))}\n    </section>\n  </div>\n  );\n          \n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}